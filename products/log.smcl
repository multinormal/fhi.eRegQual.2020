{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}eRegQual Birth Outcomes Analysis
       {txt}log:  {res}/Users/cjr/Repos/fhi.eRegQual-birth-outcomes.2020/products/log.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 6 May 2020, 15:52:50
{txt}
{com}. 
. // Set up Stata.
. do setup/setup
{txt}
{com}. version 16.1
{txt}
{com}. 
. // Set the random number generator seed.
. set seed 1234
{txt}
{com}. 
. // Set up Stata's path to use the "packages" directory for add-on packages.
. net set ado "./packages"
{txt}
{com}. sysdir set PERSONAL "./packages"
{txt}
{com}. 
. // Specify formats.
. set cformat %9.2f
{txt}
{com}. set pformat %5.2f
{txt}
{com}. set sformat %8.2f
{txt}
{com}. 
. 
{txt}end of do-file

{com}. 
. // Set up globals.
. do globals/globals
{txt}
{com}. version 16.1
{txt}
{com}. 
. 
{txt}end of do-file

{com}. 
. // Import data.
. do data/data
{txt}
{com}. version 16.1
{txt}
{com}. 
. // TODO: Ensure that each woman appears exactly once!
. 
. // Define the path to the data and the signature we expect it to have.
. local fname "data/raw/04May2020_eRegQual birth outcomes.dta"
{txt}
{com}. local signature "6367:756(27238):862839612:1580475191"
{txt}
{com}. 
. // Load the data and check its signature is as expected.
. use "`fname'", replace
{txt}
{com}. datasignature
  {res}6367:756(27238):862839612:1580475191
{txt}
{com}. assert r(datasignature) == "`signature'"
{txt}
{com}. 
. // Globals that specify the passive, imputed, and regular variables.
. global passives
{txt}
{com}. global imputeds
{txt}
{com}. global regulars
{txt}
{com}. 
. // Convert the arm variable from string to integer.
. encode prettyExposure, generate(arm)
{txt}
{com}. label variable arm Arm
{txt}
{com}. fvset base 1 arm
{txt}
{com}. global regulars $regulars arm
{txt}
{com}. 
. // Convert the stratification variable from string to integer.
. encode bookorgdistricthashed, generate(strat_var)
{txt}
{com}. label variable strat_var District
{txt}
{com}. global regulars $regulars strat_var
{txt}
{com}. 
. // Rename and label the cluster identifier variable.
. rename str_TRIAL_1_Cluster clusterid
{res}{txt}
{com}. label variable clusterid Cluster
{txt}
{com}. global regulars $regulars clusterid
{txt}
{com}. 
. // Rename the components of the composite outcome.
. rename anemia_at_birth              y1
{res}{txt}
{com}. label variable                      y1 "Anemia at birth"
{txt}
{com}. rename severehypertension_at_birth  y2
{res}{txt}
{com}. label variable                      y2 "Severe hypertension at birth"
{txt}
{com}. rename sga_undetected_at_birth      y3
{res}{txt}
{com}. label variable                      y3 "SGA undetected at birth"
{txt}
{com}. rename malpres_undetected           y4
{res}{txt}
{com}. label variable                      y4 "Malpresentation undetected at birth"
{txt}
{com}. rename lga                          y5
{res}{txt}
{com}. label variable                      y5 "Large for gestational age"
{txt}
{com}. 
. // The composite outcome is defined as follows. If:
. // * All of the outcomes are false -> composite outcome is false;
. // * At least one of the outcomes is true -> composite outcome is true;
. // * One or more of the outcomes are missing and all others are false
. //   -> composite outcome is missing.
. tempvar all_false
{txt}
{com}. generate `all_false' = (y1 == 0) & (y2 == 0) & (y3 == 0) & (y4 == 0) & (y5 == 0)
{txt}
{com}. 
. tempvar one_true
{txt}
{com}. generate `one_true'  = (y1 == 1) | (y2 == 1) | (y3 == 1) | (y4 == 1) | (y5 == 1)
{txt}
{com}. 
. generate y = .
{txt}(6,367 missing values generated)

{com}. replace  y = 0 if `all_false'
{txt}(2,818 real changes made)

{com}. replace  y = 1 if `one_true'
{txt}(1,396 real changes made)

{com}. label variable y "Adverse pregnancy outcome"
{txt}
{com}. global passives $passives y
{txt}
{com}. 
. // Verify that we can correctly recompute the composite outcome.
. count if y == TrialOne_adverse_pregoutc
  {res}6,367
{txt}
{com}. assert r(N) == _N
{txt}
{com}. 
. // Apply labels to the outcomes.
. label define yes_no 0 "No" 1 "Yes"
{txt}
{com}. label values y* yes_no
{txt}
{com}. 
. // Age.
. replace age = . if age <= 1 // Correct some mis-coded values of the age variable.
{txt}(35 real changes made, 35 to missing)

{com}. label variable age "Age (years)"
{txt}
{com}. global imputeds $imputeds age
{txt}
{com}. 
. // BMI.
. rename bookbmi bmi
{res}{txt}
{com}. label variable bmi "Body mass index"
{txt}
{com}. global imputeds $imputeds bmi
{txt}
{com}. 
. // Education.
. label variable education "Education (years)"
{txt}
{com}. global imputeds $imputeds education
{txt}
{com}. 
. // Income.
. generate log_income = log(avgincome) // Log to approximately normalize.
{txt}(404 missing values generated)

{com}. label variable log_income "Monthly household income (ILS; log scale)"
{txt}
{com}. global imputeds $imputeds log_income
{txt}
{com}. 
. // Lab availability.
. label variable lab_available "Lab available"
{txt}
{com}. global regulars $regulars lab_available
{txt}
{com}. 
. // Ultrasound available.
. label variable us_available "US available"
{txt}
{com}. global regulars $regulars us_available
{txt}
{com}. 
. // Verify that all of the regular variables are complete, and that each of the
. // variables to be imputed contain missing values.
. misstable summarize $regulars
{txt}(variables nonmissing or string)

{com}. assert r(N_eq_dot) + r(N_gt_dot) == .
{txt}
{com}. foreach x of varlist y1-y5 $imputeds {c -(}
{txt}  2{com}.   misstable summarize `x'
{txt}  3{com}.   assert r(N_eq_dot) + r(N_gt_dot) != .
{txt}  4{com}. {c )-}
{txt}{col 64}Obs<.
{col 49}{c TLC}{hline 30}
{col 16}{c |}{col 49}{c |} Unique
{col 7}Variable {c |}{col 22}Obs=.{col 32}Obs>.{col 42}Obs<.{col 49}{c |} values{col 65}Min{col 77}Max
  {hline 13}{c +}{hline 32}{c +}{hline 30}
            y1 {c |}{res}     1,743{txt}{space 10}{res}     4,624{txt}  {c |}      2          0           1
  {hline 13}{c BT}{hline 32}{c BT}{hline 30}
{col 64}Obs<.
{col 49}{c TLC}{hline 30}
{col 16}{c |}{col 49}{c |} Unique
{col 7}Variable {c |}{col 22}Obs=.{col 32}Obs>.{col 42}Obs<.{col 49}{c |} values{col 65}Min{col 77}Max
  {hline 13}{c +}{hline 32}{c +}{hline 30}
            y2 {c |}{res}     2,258{txt}{space 10}{res}     4,109{txt}  {c |}      2          0           1
  {hline 13}{c BT}{hline 32}{c BT}{hline 30}
{col 64}Obs<.
{col 49}{c TLC}{hline 30}
{col 16}{c |}{col 49}{c |} Unique
{col 7}Variable {c |}{col 22}Obs=.{col 32}Obs>.{col 42}Obs<.{col 49}{c |} values{col 65}Min{col 77}Max
  {hline 13}{c +}{hline 32}{c +}{hline 30}
            y3 {c |}{res}       752{txt}{space 10}{res}     5,615{txt}  {c |}      2          0           1
  {hline 13}{c BT}{hline 32}{c BT}{hline 30}
{col 64}Obs<.
{col 49}{c TLC}{hline 30}
{col 16}{c |}{col 49}{c |} Unique
{col 7}Variable {c |}{col 22}Obs=.{col 32}Obs>.{col 42}Obs<.{col 49}{c |} values{col 65}Min{col 77}Max
  {hline 13}{c +}{hline 32}{c +}{hline 30}
            y4 {c |}{res}       875{txt}{space 10}{res}     5,492{txt}  {c |}      2          0           1
  {hline 13}{c BT}{hline 32}{c BT}{hline 30}
{col 64}Obs<.
{col 49}{c TLC}{hline 30}
{col 16}{c |}{col 49}{c |} Unique
{col 7}Variable {c |}{col 22}Obs=.{col 32}Obs>.{col 42}Obs<.{col 49}{c |} values{col 65}Min{col 77}Max
  {hline 13}{c +}{hline 32}{c +}{hline 30}
            y5 {c |}{res}       752{txt}{space 10}{res}     5,615{txt}  {c |}      2          0           1
  {hline 13}{c BT}{hline 32}{c BT}{hline 30}
{col 64}Obs<.
{col 49}{c TLC}{hline 30}
{col 16}{c |}{col 49}{c |} Unique
{col 7}Variable {c |}{col 22}Obs=.{col 32}Obs>.{col 42}Obs<.{col 49}{c |} values{col 65}Min{col 77}Max
  {hline 13}{c +}{hline 32}{c +}{hline 30}
           age {c |}{res}        69{txt}{space 10}{res}     6,298{txt}  {c |}     32         14          45
  {hline 13}{c BT}{hline 32}{c BT}{hline 30}
{col 64}Obs<.
{col 49}{c TLC}{hline 30}
{col 16}{c |}{col 49}{c |} Unique
{col 7}Variable {c |}{col 22}Obs=.{col 32}Obs>.{col 42}Obs<.{col 49}{c |} values{col 65}Min{col 77}Max
  {hline 13}{c +}{hline 32}{c +}{hline 30}
           bmi {c |}{res}       884{txt}{space 10}{res}     5,483{txt}  {c |}   >500   1.792822      207500
  {hline 13}{c BT}{hline 32}{c BT}{hline 30}
{col 64}Obs<.
{col 49}{c TLC}{hline 30}
{col 16}{c |}{col 49}{c |} Unique
{col 7}Variable {c |}{col 22}Obs=.{col 32}Obs>.{col 42}Obs<.{col 49}{c |} values{col 65}Min{col 77}Max
  {hline 13}{c +}{hline 32}{c +}{hline 30}
     education {c |}{res}       203{txt}{space 10}{res}     6,164{txt}  {c |}     25          1          24
  {hline 13}{c BT}{hline 32}{c BT}{hline 30}
{col 64}Obs<.
{col 49}{c TLC}{hline 30}
{col 16}{c |}{col 49}{c |} Unique
{col 7}Variable {c |}{col 22}Obs=.{col 32}Obs>.{col 42}Obs<.{col 49}{c |} values{col 65}Min{col 77}Max
  {hline 13}{c +}{hline 32}{c +}{hline 30}
    log_income {c |}{res}       404{txt}{space 10}{res}     5,963{txt}  {c |}    222  -5.926926    8.922658
  {hline 13}{c BT}{hline 32}{c BT}{hline 30}

{com}. 
. // Keep only the variables of interest.
. keep y* $passives $imputeds $regulars
{txt}
{com}. 
. 
{txt}end of do-file

{com}. 
. // Do estimation.
. do estimation/estimation
{txt}
{com}. version 16.1
{txt}
{com}. 
. // Set up the imputation and the roles of the variables.
. mi set mlong
{txt}
{com}. 
. mi register passive $passives
{res}{txt}
{com}. mi register imputed $imputeds y1-y5
{res}{txt}{p}
(3365 {it:m}=0 obs. now marked as incomplete)
{p_end}

{com}. mi register regular $regulars
{txt}
{com}. 
. // Perform imputation. Due to collinearity between the constituent outcome
. // variables y1-y5, these variables are exluded as predictors for one another.
. // This is achieved by specifying the noimputed option, followed by the include
. // option that explicityly lists the imputed variables to include in the
. // imputation model. Specifying the omit option did not work as expected. It was
. // not possible to include other variables in the model for the constituent
. // outcome variables, also due to collinearity.
. mi impute chained (regress)                               $imputeds ///
>                   (logit, noimputed include($imputeds))   y1-y5     ///
>                   = i.arm i.lab_available i.us_available,           ///
>                   add(2)
{res}
{txt}Conditional models:
{p 15 21 2}
{bf:age}: regress age education log_income i.y3 i.y5 i.y4 bmi i.y1 i.y2 ib1.arm i.lab_available i.us_available
{p_end}
{p 9 21 2}
{bf:education}: regress education age log_income i.y3 i.y5 i.y4 bmi i.y1 i.y2 ib1.arm i.lab_available i.us_available
{p_end}
{p 8 21 2}
{bf:log_income}: regress log_income age education i.y3 i.y5 i.y4 bmi i.y1 i.y2 ib1.arm i.lab_available i.us_available
{p_end}
{p 16 21 2}
{bf:y3}: logit y3 age bmi education log_income ib1.arm i.lab_available i.us_available
{p_end}
{p 16 21 2}
{bf:y5}: logit y5 age bmi education log_income ib1.arm i.lab_available i.us_available
{p_end}
{p 16 21 2}
{bf:y4}: logit y4 age bmi education log_income ib1.arm i.lab_available i.us_available
{p_end}
{p 15 21 2}
{bf:bmi}: regress bmi age education log_income i.y3 i.y5 i.y4 i.y1 i.y2 ib1.arm i.lab_available i.us_available
{p_end}
{p 16 21 2}
{bf:y1}: logit y1 age bmi education log_income ib1.arm i.lab_available i.us_available
{p_end}
{p 16 21 2}
{bf:y2}: logit y2 age bmi education log_income ib1.arm i.lab_available i.us_available
{p_end}

{res}{txt}Performing chained iterations ...
{res}{txt}
Multivariate imputation{txt}{col 45}{ralign 12:Imputations }= {res}       2
{txt}Chained equations{txt}{col 45}{ralign 12:added }= {res}       2
{txt}Imputed: {it:m}=1 through {it:m}=2{txt}{col 45}{ralign 12:updated }= {res}       0

{txt}Initialization: {res}monotone{txt}{col 45}{ralign 12:Iterations }= {res}      20
{txt}{col 45}{ralign 12:burn-in }= {res}      10

{txt}{p 15 15 2}{bf:age}: linear regression{p_end}
{txt}{p 15 15 2}{bf:bmi}: linear regression{p_end}
{txt}{p 9 15 2}{bf:education}: linear regression{p_end}
{txt}{p 8 15 2}{bf:log_income}: linear regression{p_end}
{txt}{p 16 15 2}{bf:y1}: logistic regression{p_end}
{txt}{p 16 15 2}{bf:y2}: logistic regression{p_end}
{txt}{p 16 15 2}{bf:y3}: logistic regression{p_end}
{txt}{p 16 15 2}{bf:y4}: logistic regression{p_end}
{txt}{p 16 15 2}{bf:y5}: logistic regression{p_end}

{txt}{hline 19}{c TT}{hline 35}{hline 11}
{txt}{col 20}{c |}{center 46:  Observations per {it:m}}
{txt}{col 20}{c LT}{hline 35}{c TT}{hline 10}
{txt}{col 11}Variable {c |}{ralign 12:Complete }{ralign 13:Incomplete }{ralign 10:Imputed }{c |}{ralign 10:Total}
{hline 19}{c +}{hline 35}{c +}{hline 10}
{txt}{ralign 19:age }{c |}{res}       6298           69        69 {txt}{c |}{res}      6367
{txt}{ralign 19:bmi }{c |}{res}       5483          884       884 {txt}{c |}{res}      6367
{txt}{ralign 19:education }{c |}{res}       6164          203       203 {txt}{c |}{res}      6367
{txt}{ralign 19:log_income }{c |}{res}       5963          404       404 {txt}{c |}{res}      6367
{txt}{ralign 19:y1 }{c |}{res}       4624         1743      1743 {txt}{c |}{res}      6367
{txt}{ralign 19:y2 }{c |}{res}       4109         2258      2258 {txt}{c |}{res}      6367
{txt}{ralign 19:y3 }{c |}{res}       5615          752       752 {txt}{c |}{res}      6367
{txt}{ralign 19:y4 }{c |}{res}       5492          875       875 {txt}{c |}{res}      6367
{txt}{ralign 19:y5 }{c |}{res}       5615          752       752 {txt}{c |}{res}      6367
{txt}{hline 19}{c BT}{hline 35}{c BT}{hline 10}
{p 0 1 1 66}(complete + incomplete = total; imputed is the minimum across {it:m}
 of the number of filled-in observations.){p_end}

{com}. 
. // Do a very basic analysis that ignores all issue such as missing data.
. //melogit y arm i.strat_var || clusterid:, or
. 
. // TODO: Note that if we replace arm with i.arm, the model does not fit but gives
. // identical or very similar estimates. I.e., there is a problem that gets
. // introduced when we convert arm into an indicator. The estimates for the two
. // approaches are identical except for the constant term, whose CI is slightly
. // wider under the arm (rather than i.arm) approach. The interpretation of the
. // arm coefficient is that it is the OR for a unit increase in "arm", i.e.,
. // it corresponds to the arm=2 (the D condition). So, perhaps rename the
. // variable to be something like "treat_D".
. 
. 
{txt}end of do-file

{com}. 
. // Obtain the git revision hash, which is used in the reports.
. tempfile git_revision_filename
{txt}
{com}. tempname revision_file
{txt}
{com}. shell git rev-parse --short HEAD > "`git_revision_filename'"
{txt}

{com}. file open `revision_file' using `git_revision_filename', read text
{txt}
{com}. file read `revision_file' line
{txt}
{com}. global git_revision = "`macval(line)'"
{txt}
{com}. 
. 
{txt}end of do-file

{com}. display "$imputeds"
{res}age bmi education log_income

{com}. 