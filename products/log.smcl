{smcl}
{com}{sf}{ul off}{txt}{.-}
      name:  {res}eRegQual Birth Outcomes Analysis
       {txt}log:  {res}/Users/cjr/Repos/fhi.eRegQual-birth-outcomes.2020/products/log.smcl
  {txt}log type:  {res}smcl
 {txt}opened on:  {res} 8 May 2020, 10:59:11
{txt}
{com}. 
. // Set up Stata.
. do setup/setup
{txt}
{com}. version 16.1
{txt}
{com}. 
. // Set the random number generator seed.
. set seed 1234
{txt}
{com}. 
. // Set up Stata's path to use the "packages" directory for add-on packages.
. net set ado "./packages"
{txt}
{com}. sysdir set PERSONAL "./packages"
{txt}
{com}. 
. // Specify formats.
. set cformat %9.2f
{txt}
{com}. set pformat %5.2f
{txt}
{com}. set sformat %8.2f
{txt}
{com}. 
. 
{txt}end of do-file

{com}. 
. // Set up globals.
. do globals/globals
{txt}
{com}. version 16.1
{txt}
{com}. 
. // The number of imputations to perform.
. global m_imputations 5 // TODO: CHANGE THIS
{txt}
{com}. 
. 
{txt}end of do-file

{com}. 
. // Import data and perform imputation.
. do data/import
{txt}
{com}. version 16.1
{txt}
{com}. 
. // TODO: Ensure that each woman appears exactly once!
. 
. // Define the path to the data and the signature we expect it to have.
. local fname "data/raw/04May2020_eRegQual birth outcomes.dta"
{txt}
{com}. local signature "6367:756(27238):862839612:1580475191"
{txt}
{com}. 
. frame create original
{txt}
{com}. frame original {c -(}
.   // Load the data and check its signature is as expected.
.   use "`fname'", replace
.   datasignature
  {res}6367:756(27238):862839612:1580475191
{com}.   assert r(datasignature) == "`signature'"
. 
.   // Globals that specify the imputed and regular variables.
.   global imputeds
.   global regulars
. 
.   // Convert the arm variable from string to integer.
.   encode prettyExposure, generate(arm)
.   label variable arm Arm
.   fvset base 1 arm
.   global regulars $regulars arm
. 
.   // Convert the stratification variable from string to integer.
.   encode bookorgdistricthashed, generate(strat_var)
.   label variable strat_var District
.   global regulars $regulars strat_var
. 
.   // Rename and label the cluster identifier variable.
.   rename str_TRIAL_1_Cluster clusterid
{res}{com}.   label variable clusterid Cluster
.   global regulars $regulars clusterid
. 
.   // Rename the components of the composite outcome.
.   rename anemia_at_birth              y1
{res}{com}.   label variable                      y1 "Anemia at birth"
.   rename severehypertension_at_birth  y2
{res}{com}.   label variable                      y2 "Severe hypertension at birth"
.   rename sga_undetected_at_birth      y3
{res}{com}.   label variable                      y3 "SGA undetected at birth"
.   rename malpres_undetected           y4
{res}{com}.   label variable                      y4 "Malpresentation undetected at birth"
.   rename lga                          y5
{res}{com}.   label variable                      y5 "Large for gestational age"
. 
.   // Apply labels to the outcomes.
.   label define yes_no 0 "No" 1 "Yes"
.   label values y* yes_no
. 
.   // Age.
.   replace age = . if age <= 1 // Correct some mis-coded values of the age variable.
{txt}(35 real changes made, 35 to missing)
{com}.   label variable age "Age (years)"
.   global imputeds $imputeds age
. 
.   // BMI.
.   rename bookbmi bmi
{res}{com}.   replace bmi = . if bmi < 15 | bmi > 48 // Same policy as for categorical version.
{txt}(54 real changes made, 54 to missing)
{com}.   label variable bmi "Body mass index"
.   global imputeds $imputeds bmi
. 
.   // Education.
.   label variable education "Education (years)"
.   global imputeds $imputeds education
. 
.   // Income.
.   generate log_income = log(avgincome) // Log to approximately normalize.
{txt}(404 missing values generated)
{com}.   label variable log_income "Monthly household income (ILS; log scale)"
.   global imputeds $imputeds log_income
. 
.   // Lab availability.
.   label variable lab_available "Lab available"
.   global regulars $regulars lab_available
. 
.   // Ultrasound available.
.   label variable us_available "US available"
.   global regulars $regulars us_available
. 
.   // Verify that all of the regular variables are complete, and that each of the
.   // variables to be imputed contain missing values.
.   misstable summarize $regulars
{txt}(variables nonmissing or string)
{com}.   assert r(N_eq_dot) + r(N_gt_dot) == .
.   foreach x of varlist y1-y5 $imputeds {c -(}
{txt}  2{com}.     misstable summarize `x'
{txt}  3{com}.     assert r(N_eq_dot) + r(N_gt_dot) != .
{txt}  4{com}.   {c )-}
{txt}{col 64}Obs<.
{col 49}{c TLC}{hline 30}
{col 16}{c |}{col 49}{c |} Unique
{col 7}Variable {c |}{col 22}Obs=.{col 32}Obs>.{col 42}Obs<.{col 49}{c |} values{col 65}Min{col 77}Max
  {hline 13}{c +}{hline 32}{c +}{hline 30}
            y1 {c |}{res}     1,743{txt}{space 10}{res}     4,624{txt}  {c |}      2          0           1
  {hline 13}{c BT}{hline 32}{c BT}{hline 30}
{col 64}Obs<.
{col 49}{c TLC}{hline 30}
{col 16}{c |}{col 49}{c |} Unique
{col 7}Variable {c |}{col 22}Obs=.{col 32}Obs>.{col 42}Obs<.{col 49}{c |} values{col 65}Min{col 77}Max
  {hline 13}{c +}{hline 32}{c +}{hline 30}
            y2 {c |}{res}     2,258{txt}{space 10}{res}     4,109{txt}  {c |}      2          0           1
  {hline 13}{c BT}{hline 32}{c BT}{hline 30}
{col 64}Obs<.
{col 49}{c TLC}{hline 30}
{col 16}{c |}{col 49}{c |} Unique
{col 7}Variable {c |}{col 22}Obs=.{col 32}Obs>.{col 42}Obs<.{col 49}{c |} values{col 65}Min{col 77}Max
  {hline 13}{c +}{hline 32}{c +}{hline 30}
            y3 {c |}{res}       752{txt}{space 10}{res}     5,615{txt}  {c |}      2          0           1
  {hline 13}{c BT}{hline 32}{c BT}{hline 30}
{col 64}Obs<.
{col 49}{c TLC}{hline 30}
{col 16}{c |}{col 49}{c |} Unique
{col 7}Variable {c |}{col 22}Obs=.{col 32}Obs>.{col 42}Obs<.{col 49}{c |} values{col 65}Min{col 77}Max
  {hline 13}{c +}{hline 32}{c +}{hline 30}
            y4 {c |}{res}       875{txt}{space 10}{res}     5,492{txt}  {c |}      2          0           1
  {hline 13}{c BT}{hline 32}{c BT}{hline 30}
{col 64}Obs<.
{col 49}{c TLC}{hline 30}
{col 16}{c |}{col 49}{c |} Unique
{col 7}Variable {c |}{col 22}Obs=.{col 32}Obs>.{col 42}Obs<.{col 49}{c |} values{col 65}Min{col 77}Max
  {hline 13}{c +}{hline 32}{c +}{hline 30}
            y5 {c |}{res}       752{txt}{space 10}{res}     5,615{txt}  {c |}      2          0           1
  {hline 13}{c BT}{hline 32}{c BT}{hline 30}
{col 64}Obs<.
{col 49}{c TLC}{hline 30}
{col 16}{c |}{col 49}{c |} Unique
{col 7}Variable {c |}{col 22}Obs=.{col 32}Obs>.{col 42}Obs<.{col 49}{c |} values{col 65}Min{col 77}Max
  {hline 13}{c +}{hline 32}{c +}{hline 30}
           age {c |}{res}        69{txt}{space 10}{res}     6,298{txt}  {c |}     32         14          45
  {hline 13}{c BT}{hline 32}{c BT}{hline 30}
{col 64}Obs<.
{col 49}{c TLC}{hline 30}
{col 16}{c |}{col 49}{c |} Unique
{col 7}Variable {c |}{col 22}Obs=.{col 32}Obs>.{col 42}Obs<.{col 49}{c |} values{col 65}Min{col 77}Max
  {hline 13}{c +}{hline 32}{c +}{hline 30}
           bmi {c |}{res}       938{txt}{space 10}{res}     5,429{txt}  {c |}   >500   15.42969    47.98243
  {hline 13}{c BT}{hline 32}{c BT}{hline 30}
{col 64}Obs<.
{col 49}{c TLC}{hline 30}
{col 16}{c |}{col 49}{c |} Unique
{col 7}Variable {c |}{col 22}Obs=.{col 32}Obs>.{col 42}Obs<.{col 49}{c |} values{col 65}Min{col 77}Max
  {hline 13}{c +}{hline 32}{c +}{hline 30}
     education {c |}{res}       203{txt}{space 10}{res}     6,164{txt}  {c |}     25          1          24
  {hline 13}{c BT}{hline 32}{c BT}{hline 30}
{col 64}Obs<.
{col 49}{c TLC}{hline 30}
{col 16}{c |}{col 49}{c |} Unique
{col 7}Variable {c |}{col 22}Obs=.{col 32}Obs>.{col 42}Obs<.{col 49}{c |} values{col 65}Min{col 77}Max
  {hline 13}{c +}{hline 32}{c +}{hline 30}
    log_income {c |}{res}       404{txt}{space 10}{res}     5,963{txt}  {c |}    222  -5.926926    8.922658
  {hline 13}{c BT}{hline 32}{c BT}{hline 30}
{com}. 
.   // Keep only the variables of interest.
.   keep y* $imputeds $regulars TrialOne_adverse_pregoutc
. {c )-}
{txt}
{com}. 
. 
{txt}end of do-file

{com}. do data/impute
{txt}
{com}. version 16.1
{txt}
{com}. 
. frame copy original imputed
{txt}
{com}. frame imputed {c -(}
.   // Obtain the sample size (before imputation).
.   local sample_size = _N
. 
.   // Set up the imputation and the roles of the variables.
.   mi set mlong
.   mi register imputed $imputeds y1-y5
{res}{txt}{p}
(3396 {it:m}=0 obs. now marked as incomplete)
{p_end}
{com}.   mi register regular $regulars
. 
.   // Perform imputation. Due to collinearity between the constituent outcome
.   // variables y1-y5, these variables are exluded as predictors for one another.
.   // This is achieved by specifying the noimputed option, followed by the include
.   // option that explicityly lists the imputed variables to include in the
.   // imputation model. Specifying the omit option did not work as expected. It was
.   // not possible to include other variables in the model for the constituent
.   // outcome variables, also due to collinearity.
.   mi impute chained (regress)                               $imputeds ///
>                     (logit, noimputed include($imputeds))   y1-y5     ///
>                     = i.arm i.lab_available i.us_available,           ///
>                     add($m_imputations) 
{res}
{txt}Conditional models:
{p 15 21 2}
{bf:age}: regress age education log_income i.y3 i.y5 i.y4 bmi i.y1 i.y2 ib1.arm i.lab_available i.us_available
{p_end}
{p 9 21 2}
{bf:education}: regress education age log_income i.y3 i.y5 i.y4 bmi i.y1 i.y2 ib1.arm i.lab_available i.us_available
{p_end}
{p 8 21 2}
{bf:log_income}: regress log_income age education i.y3 i.y5 i.y4 bmi i.y1 i.y2 ib1.arm i.lab_available i.us_available
{p_end}
{p 16 21 2}
{bf:y3}: logit y3 age bmi education log_income ib1.arm i.lab_available i.us_available
{p_end}
{p 16 21 2}
{bf:y5}: logit y5 age bmi education log_income ib1.arm i.lab_available i.us_available
{p_end}
{p 16 21 2}
{bf:y4}: logit y4 age bmi education log_income ib1.arm i.lab_available i.us_available
{p_end}
{p 15 21 2}
{bf:bmi}: regress bmi age education log_income i.y3 i.y5 i.y4 i.y1 i.y2 ib1.arm i.lab_available i.us_available
{p_end}
{p 16 21 2}
{bf:y1}: logit y1 age bmi education log_income ib1.arm i.lab_available i.us_available
{p_end}
{p 16 21 2}
{bf:y2}: logit y2 age bmi education log_income ib1.arm i.lab_available i.us_available
{p_end}

{res}{txt}Performing chained iterations ...
{res}{txt}
Multivariate imputation{txt}{col 45}{ralign 12:Imputations }= {res}       5
{txt}Chained equations{txt}{col 45}{ralign 12:added }= {res}       5
{txt}Imputed: {it:m}=1 through {it:m}=5{txt}{col 45}{ralign 12:updated }= {res}       0

{txt}Initialization: {res}monotone{txt}{col 45}{ralign 12:Iterations }= {res}      50
{txt}{col 45}{ralign 12:burn-in }= {res}      10

{txt}{p 15 15 2}{bf:age}: linear regression{p_end}
{txt}{p 15 15 2}{bf:bmi}: linear regression{p_end}
{txt}{p 9 15 2}{bf:education}: linear regression{p_end}
{txt}{p 8 15 2}{bf:log_income}: linear regression{p_end}
{txt}{p 16 15 2}{bf:y1}: logistic regression{p_end}
{txt}{p 16 15 2}{bf:y2}: logistic regression{p_end}
{txt}{p 16 15 2}{bf:y3}: logistic regression{p_end}
{txt}{p 16 15 2}{bf:y4}: logistic regression{p_end}
{txt}{p 16 15 2}{bf:y5}: logistic regression{p_end}

{txt}{hline 19}{c TT}{hline 35}{hline 11}
{txt}{col 20}{c |}{center 46:  Observations per {it:m}}
{txt}{col 20}{c LT}{hline 35}{c TT}{hline 10}
{txt}{col 11}Variable {c |}{ralign 12:Complete }{ralign 13:Incomplete }{ralign 10:Imputed }{c |}{ralign 10:Total}
{hline 19}{c +}{hline 35}{c +}{hline 10}
{txt}{ralign 19:age }{c |}{res}       6298           69        69 {txt}{c |}{res}      6367
{txt}{ralign 19:bmi }{c |}{res}       5429          938       938 {txt}{c |}{res}      6367
{txt}{ralign 19:education }{c |}{res}       6164          203       203 {txt}{c |}{res}      6367
{txt}{ralign 19:log_income }{c |}{res}       5963          404       404 {txt}{c |}{res}      6367
{txt}{ralign 19:y1 }{c |}{res}       4624         1743      1743 {txt}{c |}{res}      6367
{txt}{ralign 19:y2 }{c |}{res}       4109         2258      2258 {txt}{c |}{res}      6367
{txt}{ralign 19:y3 }{c |}{res}       5615          752       752 {txt}{c |}{res}      6367
{txt}{ralign 19:y4 }{c |}{res}       5492          875       875 {txt}{c |}{res}      6367
{txt}{ralign 19:y5 }{c |}{res}       5615          752       752 {txt}{c |}{res}      6367
{txt}{hline 19}{c BT}{hline 35}{c BT}{hline 10}
{p 0 1 1 66}(complete + incomplete = total; imputed is the minimum across {it:m}
 of the number of filled-in observations.){p_end}
{com}. 
.   // The composite outcome is defined as follows. If:
.   // * All of the outcomes are false -> composite outcome is false;
.   // * At least one of the outcomes is true -> composite outcome is true;
.   // * One or more of the outcomes are missing and all others are false
.   //   -> composite outcome is missing.
.   tempvar all_false
.   mi passive: generate `all_false' = ///
>     (y1 == 0) & (y2 == 0) & (y3 == 0) & (y4 == 0) & (y5 == 0)
{res}{txt}{it:m}=0:
{res}{txt}{it:m}=1:
{res}{txt}{it:m}=2:
{res}{txt}{it:m}=3:
{res}{txt}{it:m}=4:
{res}{txt}{it:m}=5:
{res}{com}.   tempvar one_true
.   mi passive: generate `one_true'  = ///
>     (y1 == 1) | (y2 == 1) | (y3 == 1) | (y4 == 1) | (y5 == 1)
{res}{txt}{it:m}=0:
{res}{txt}{it:m}=1:
{res}{txt}{it:m}=2:
{res}{txt}{it:m}=3:
{res}{txt}{it:m}=4:
{res}{txt}{it:m}=5:
{res}{com}. 
.   mi passive: generate y = .
{res}{txt}{it:m}=0:
(6,367 missing values generated)
{res}{txt}{it:m}=1:
(6,367 missing values generated)
{res}{txt}{it:m}=2:
(6,367 missing values generated)
{res}{txt}{it:m}=3:
(6,367 missing values generated)
{res}{txt}{it:m}=4:
(6,367 missing values generated)
{res}{txt}{it:m}=5:
(6,367 missing values generated)
{res}{com}.   mi passive: replace  y = 0 if `all_false'
{res}{txt}{it:m}=0:
(2,818 real changes made)
{res}{txt}{it:m}=1:
(4,749 real changes made)
{res}{txt}{it:m}=2:
(4,756 real changes made)
{res}{txt}{it:m}=3:
(4,756 real changes made)
{res}{txt}{it:m}=4:
(4,739 real changes made)
{res}{txt}{it:m}=5:
(4,759 real changes made)
{res}{com}.   mi passive: replace  y = 1 if `one_true'
{res}{txt}{it:m}=0:
(1,396 real changes made)
{res}{txt}{it:m}=1:
(1,618 real changes made)
{res}{txt}{it:m}=2:
(1,611 real changes made)
{res}{txt}{it:m}=3:
(1,611 real changes made)
{res}{txt}{it:m}=4:
(1,628 real changes made)
{res}{txt}{it:m}=5:
(1,608 real changes made)
{res}{com}.   label variable y "Adverse pregnancy outcome"
. 
.   // Verify that we can correctly recompute the composite outcome using the
.   // original (non-imputed) data.
.   count if y == TrialOne_adverse_pregoutc & _mi_m == 0
  {res}6,367
{com}.   assert r(N) == `sample_size'
. {c )-}
{txt}
{com}. 
. 
{txt}end of do-file

{com}. 
. // Do estimation.
. do estimation/estimation
{txt}
{com}. version 16.1
{txt}
{com}. 
. frame imputed {c -(}
.   // Estimate population averaged effects using a GEE. This is the planned
.   // analysis.
.   mi xtset clusterid
{res}{txt}{p}
(passive variables
{res}__000000 __000001
{txt}unregistered because not in {it:m}=0)
{p_end}
{res}{txt}{col 8}panel variable:  {res}clusterid (unbalanced)
{com}.   mi estimate, eform: xtgee y i.arm i.strat_var, family(binomial) link(logit)
{res}
{txt}Multiple-imputation estimates{col 49}Imputations{col 67}= {res}         5
{txt}GEE population-averaged model{col 49}Number of obs{col 67}= {res}     6,367

{txt}Group variable:{ralign 27:{res:clusterid}}{col 49}Number of groups{col 67}= {res}       119
{txt}Link:{ralign 37:{res:logit}}{col 49}Obs per group:
Family:{ralign 35:{res:binomial}}{col 49}              min{col 67}= {res}         9
{txt}Correlation:{ralign 30:{res:exchangeable}}{col 49}              avg{col 67}= {res}      53.5
{txt}Scale parameter:{ralign 26:{res:1}}{col 49}              max{col 67}= {res}       217

{txt}{col 49}Average RVI{col 67}= {res}    0.1204
{txt}{col 49}Largest FMI{col 67}= {res}    0.1680
{txt}DF adjustment:{ralign 28: {res:Large sample}}{col 49}DF:     min{col 67}= {res}    160.72
{txt}{col 49}        avg{col 67}= {res}    325.04
{txt}{col 49}        max{col 67}= {res}    981.73
{txt}Model F test:{ralign 29: {res:Equal FMI}}{col 49}F({res}   5{txt},{res} 1061.1{txt}){col 67}= {res}      1.17
{txt}Within VCE type: {ralign 25:{res:Conventional}}{col 49}Prob > F{col 67}= {res}    0.3194

{txt}{hline 13}{c TT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{col 1}           y{col 14}{c |}     exp(b){col 26}   Std. Err.{col 38}      t{col 46}   P>|t|{col 54}     [95% Con{col 67}f. Interval]
{hline 13}{c +}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{space 9}arm {c |}
{space 10}D  {c |}{col 14}{res}{space 2}     0.99{col 26}{space 2}     0.06{col 37}{space 1}   -0.08{col 46}{space 3} 0.93{col 54}{space 4}     0.88{col 67}{space 3}     1.12
{txt}{space 12} {c |}
{space 3}strat_var {c |}
{space 5}8d9c30  {c |}{col 14}{res}{space 2}     1.14{col 26}{space 2}     0.12{col 37}{space 1}    1.28{col 46}{space 3} 0.20{col 54}{space 4}     0.93{col 67}{space 3}     1.40
{txt}{space 5}9d5ed6  {c |}{col 14}{res}{space 2}     0.94{col 26}{space 2}     0.12{col 37}{space 1}   -0.48{col 46}{space 3} 0.63{col 54}{space 4}     0.73{col 67}{space 3}     1.21
{txt}{space 5}e1e1d3  {c |}{col 14}{res}{space 2}     1.11{col 26}{space 2}     0.12{col 37}{space 1}    0.96{col 46}{space 3} 0.34{col 54}{space 4}     0.90{col 67}{space 3}     1.37
{txt}{space 5}ff4457  {c |}{col 14}{res}{space 2}     1.19{col 26}{space 2}     0.12{col 37}{space 1}    1.71{col 46}{space 3} 0.09{col 54}{space 4}     0.97{col 67}{space 3}     1.45
{txt}{space 12} {c |}
{space 7}_cons {c |}{col 14}{res}{space 2}     0.31{col 26}{space 2}     0.03{col 37}{space 1}  -12.99{col 46}{space 3} 0.00{col 54}{space 4}     0.26{col 67}{space 3}     0.37
{txt}{hline 13}{c BT}{hline 11}{hline 11}{hline 9}{hline 8}{hline 13}{hline 12}
{res}{com}. 
.   // We cannot obtain the ICC from the GEE model, so fit a mixed-effects logistic
.   // mode. Note that we have to use the option cmdok to force Stata to fit the
.   // model. As documented at the following, the coefficients, constant, and their
.   // CIs, and the variance components will be appropriately estimated, but the CIs
.   // for the variance components may not be correct. See
.   // https://www.statalist.org/forums/forum/general-stata-discussion/general/1349542-mi-estimate-melogit-is-it-legit
.   //
.   // mi estimate, or cmdok: melogit y i.arm i.strat_var || clusterid:
.   // estat icc // TODO: Command not valid after imputation it seems, so estimate
.   // this from complete cases.
.   // TODO: Following the note above, the ICC may not be reliable...
. {c )-}
{txt}
{com}. 
. 
. 
{txt}end of do-file

{com}. 
. // Make figures
. do figures/figures
{txt}
{com}. version 16.1
{txt}
{com}. 
. set graphics off
{txt}
{com}. 
. // Define the number of imputations to plot.
. local imputations_to_plot 5
{txt}
{com}. assert `imputations_to_plot' <= $m_imputations
{txt}
{com}. 
. // Make the plots.
. tempname this_frame
{txt}
{com}. frame copy imputed `this_frame'
{txt}
{com}. frame `this_frame' {c -(}
.   mi set M = `imputations_to_plot'
{txt}(number of imputations {it:M} = 5 unchanged)
{com}. 
.   // Generate a variable for each imputed variable that contains the original
.   // values (with the missing data), repeated for each imputed data set.
.   mi convert wide, clear
{res}{com}.   foreach var of varlist $imputeds y1-y5 y {c -(}
{txt}  2{com}.     generate `var'_orig = `var'
{txt}  3{com}.   {c )-}
{txt}(69 missing values generated)
(938 missing values generated)
(203 missing values generated)
(404 missing values generated)
(1,743 missing values generated)
(2,258 missing values generated)
(752 missing values generated)
(875 missing values generated)
(752 missing values generated)
(2,153 missing values generated)
{com}.   mi convert flong, clear
{res}{com}. 
.   // Create readable value labels for the imputations, and order them so that
.   // the original data will appear first in the plots.
.   generate imputation_str = ""
{txt}(38,202 missing values generated)
{com}.   replace imputation_str = "Original" if _mi_m == 0
{txt}variable {bf}imputation_str{sf} was {bf}{res}str1{sf}{txt} now {bf}{res}str8{sf}
{txt}(6,367 real changes made)
{com}.   replace imputation_str = "Imputation " + string(_mi_m) if _mi_m != 0
{txt}variable {bf}imputation_str{sf} was {bf}{res}str8{sf}{txt} now {bf}{res}str12{sf}
{txt}(31,835 real changes made)
{com}.   encode imputation_str, generate(imputation)
.   replace imputation = (`imputations_to_plot' + 1) - imputation
{txt}(31,835 real changes made)
{com}.   local label_var: value label imputation
.   label define `label_var' 0 "Original", modify
. 
.   // Plot the density of each of the continuous imputed variables.
.   foreach var of global imputeds {c -(}
{txt}  2{com}.     quietly misstable patterns `var'_orig if imputation == 0
{txt}  3{com}.     local pc_miss = 100 * (r(N_incomplete) / (r(N_incomplete) + r(N_complete)))
{txt}  4{com}.     local pc_miss = string(`pc_miss', "%8.1f") + "% missing"
{txt}  5{com}. 
.     local var_label : variable label `var'
{txt}  6{com}.     twoway (kdensity `var'_orig)               ///
>            (kdensity `var'),                   ///
>            by(imputation arm, note(""))        ///
>            xtitle("`var_label' (`pc_miss')")   ///
>            ylabel(none)                        ///
>            legend(label(1 "Original") label(2 "Imputed"))
{txt}  7{com}.     graph export "products/Imputations (cont) - `var_label'.pdf", replace
{txt}  8{com}.   {c )-}
{res}{txt}(file products/Imputations (cont) - Age (years).pdf written in PDF format)
{res}{txt}(file products/Imputations (cont) - Body mass index.pdf written in PDF format)
{res}{txt}(file products/Imputations (cont) - Education (years).pdf written in PDF format)
{res}{txt}(file products/Imputations (cont) - Monthly household income (ILS; log scale).pdf written in PDF format)
{com}. 
.   // Plot the distribution of each of the dichotomous imputed variables.
.   label values y* yes_no
.   foreach var of varlist y y1-y5 {c -(}
{txt}  2{com}.     quietly misstable patterns `var'_orig if imputation == 0
{txt}  3{com}.     local pc_miss = 100 * (r(N_incomplete) / (r(N_incomplete) + r(N_complete)))
{txt}  4{com}.     local pc_miss = string(`pc_miss', "%8.1f") + "% missing"
{txt}  5{com}.     local var_label : variable label `var'
{txt}  6{com}. 
.     splitvallabels imputation, recode
{txt}  7{com}.     graph hbar (count),                                             ///
>       over(`var', label(labsize(small)))                            ///
>       over(arm, label(labsize(small)))                              ///
>       over(imputation, label(labsize(small)) relabel(`r(relabel)')) ///
>       blabel(bar) intensity(25)                                     ///
>       ytitle("`var_label' (`pc_miss')") yscale(range(0 3500))
{txt}  8{com}.     graph export "products/Imputations (dich) - `var_label'.pdf", replace
{txt}  9{com}.   {c )-}
{res}{txt}(file products/Imputations (dich) - Adverse pregnancy outcome.pdf written in PDF format)
{res}{txt}(file products/Imputations (dich) - Anemia at birth.pdf written in PDF format)
{res}{txt}(file products/Imputations (dich) - Severe hypertension at birth.pdf written in PDF format)
{res}{txt}(file products/Imputations (dich) - SGA undetected at birth.pdf written in PDF format)
{res}{txt}(file products/Imputations (dich) - Malpresentation undetected at birth.pdf written in PDF format)
{res}{txt}(file products/Imputations (dich) - Large for gestational age.pdf written in PDF format)
{com}. {c )-}
{txt}
{com}. 
. set graphics on
{txt}
{com}. 
. 
{txt}end of do-file

{com}. 
. // Obtain the git revision hash, which is used in the reports.
. tempfile git_revision_filename
{txt}
{com}. tempname revision_file
{txt}
{com}. shell git rev-parse --short HEAD > "`git_revision_filename'"
{txt}

{com}. file open `revision_file' using `git_revision_filename', read text
{txt}
{com}. file read `revision_file' line
{txt}
{com}. global git_revision = "`macval(line)'"
{txt}
{com}. 
. 
{txt}end of do-file

{com}. view products/log.smcl

. help markdoc

. help frame copy

. display "$regulars"
{res}arm strat_var clusterid lab_available us_available

{com}. do data/impute
{txt}
{com}. version 16.1
{txt}
{com}. 
. frame copy original imputed, replace
{txt}
{com}. frame imputed {c -(}
.   // Obtain the sample size (before imputation).
.   local sample_size = _N
. 
.   // Set up the imputation and the roles of the variables.
.   mi set mlong
.   mi register imputed $imputeds y1-y5
{res}{txt}{p}
(3396 {it:m}=0 obs. now marked as incomplete)
{p_end}
{com}.   mi register regular $regulars
. 
.   // Perform imputation. Due to collinearity between the constituent outcome
.   // variables y1-y5, these variables are exluded as predictors for one another.
.   // This is achieved by specifying the noimputed option, followed by the include
.   // option that explicityly lists the imputed variables to include in the
.   // imputation model. Specifying the omit option did not work as expected. It was
.   // not possible to include other variables in the model for the constituent
.   // outcome variables, also due to collinearity.
.   mi impute chained (regress)                               $imputeds ///
>                     (logit, noimputed include($imputeds strat_var))   y1-y5     ///
>                     = i.arm i.lab_available i.us_available,           ///
>                     add($m_imputations) 
{res}
{txt}Conditional models:
{p 15 21 2}
{bf:age}: regress age education log_income i.y3 i.y5 i.y4 bmi i.y1 i.y2 ib1.arm i.lab_available i.us_available
{p_end}
{p 9 21 2}
{bf:education}: regress education age log_income i.y3 i.y5 i.y4 bmi i.y1 i.y2 ib1.arm i.lab_available i.us_available
{p_end}
{p 8 21 2}
{bf:log_income}: regress log_income age education i.y3 i.y5 i.y4 bmi i.y1 i.y2 ib1.arm i.lab_available i.us_available
{p_end}
{p 16 21 2}
{bf:y3}: logit y3 age bmi education log_income strat_var ib1.arm i.lab_available i.us_available
{p_end}
{p 16 21 2}
{bf:y5}: logit y5 age bmi education log_income strat_var ib1.arm i.lab_available i.us_available
{p_end}
{p 16 21 2}
{bf:y4}: logit y4 age bmi education log_income strat_var ib1.arm i.lab_available i.us_available
{p_end}
{p 15 21 2}
{bf:bmi}: regress bmi age education log_income i.y3 i.y5 i.y4 i.y1 i.y2 ib1.arm i.lab_available i.us_available
{p_end}
{p 16 21 2}
{bf:y1}: logit y1 age bmi education log_income strat_var ib1.arm i.lab_available i.us_available
{p_end}
{p 16 21 2}
{bf:y2}: logit y2 age bmi education log_income strat_var ib1.arm i.lab_available i.us_available
{p_end}

{res}{txt}Performing chained iterations ...
{res}{txt}
Multivariate imputation{txt}{col 45}{ralign 12:Imputations }= {res}       5
{txt}Chained equations{txt}{col 45}{ralign 12:added }= {res}       5
{txt}Imputed: {it:m}=1 through {it:m}=5{txt}{col 45}{ralign 12:updated }= {res}       0

{txt}Initialization: {res}monotone{txt}{col 45}{ralign 12:Iterations }= {res}      50
{txt}{col 45}{ralign 12:burn-in }= {res}      10

{txt}{p 15 15 2}{bf:age}: linear regression{p_end}
{txt}{p 15 15 2}{bf:bmi}: linear regression{p_end}
{txt}{p 9 15 2}{bf:education}: linear regression{p_end}
{txt}{p 8 15 2}{bf:log_income}: linear regression{p_end}
{txt}{p 16 15 2}{bf:y1}: logistic regression{p_end}
{txt}{p 16 15 2}{bf:y2}: logistic regression{p_end}
{txt}{p 16 15 2}{bf:y3}: logistic regression{p_end}
{txt}{p 16 15 2}{bf:y4}: logistic regression{p_end}
{txt}{p 16 15 2}{bf:y5}: logistic regression{p_end}

{txt}{hline 19}{c TT}{hline 35}{hline 11}
{txt}{col 20}{c |}{center 46:  Observations per {it:m}}
{txt}{col 20}{c LT}{hline 35}{c TT}{hline 10}
{txt}{col 11}Variable {c |}{ralign 12:Complete }{ralign 13:Incomplete }{ralign 10:Imputed }{c |}{ralign 10:Total}
{hline 19}{c +}{hline 35}{c +}{hline 10}
{txt}{ralign 19:age }{c |}{res}       6298           69        69 {txt}{c |}{res}      6367
{txt}{ralign 19:bmi }{c |}{res}       5429          938       938 {txt}{c |}{res}      6367
{txt}{ralign 19:education }{c |}{res}       6164          203       203 {txt}{c |}{res}      6367
{txt}{ralign 19:log_income }{c |}{res}       5963          404       404 {txt}{c |}{res}      6367
{txt}{ralign 19:y1 }{c |}{res}       4624         1743      1743 {txt}{c |}{res}      6367
{txt}{ralign 19:y2 }{c |}{res}       4109         2258      2258 {txt}{c |}{res}      6367
{txt}{ralign 19:y3 }{c |}{res}       5615          752       752 {txt}{c |}{res}      6367
{txt}{ralign 19:y4 }{c |}{res}       5492          875       875 {txt}{c |}{res}      6367
{txt}{ralign 19:y5 }{c |}{res}       5615          752       752 {txt}{c |}{res}      6367
{txt}{hline 19}{c BT}{hline 35}{c BT}{hline 10}
{p 0 1 1 66}(complete + incomplete = total; imputed is the minimum across {it:m}
 of the number of filled-in observations.){p_end}
{com}. 
.   // The composite outcome is defined as follows. If:
.   // * All of the outcomes are false -> composite outcome is false;
.   // * At least one of the outcomes is true -> composite outcome is true;
.   // * One or more of the outcomes are missing and all others are false
.   //   -> composite outcome is missing.
.   tempvar all_false
.   mi passive: generate `all_false' = ///
>     (y1 == 0) & (y2 == 0) & (y3 == 0) & (y4 == 0) & (y5 == 0)
{res}{txt}{it:m}=0:
{res}{txt}{it:m}=1:
{res}{txt}{it:m}=2:
{res}{txt}{it:m}=3:
{res}{txt}{it:m}=4:
{res}{txt}{it:m}=5:
{res}{com}.   tempvar one_true
.   mi passive: generate `one_true'  = ///
>     (y1 == 1) | (y2 == 1) | (y3 == 1) | (y4 == 1) | (y5 == 1)
{res}{txt}{it:m}=0:
{res}{txt}{it:m}=1:
{res}{txt}{it:m}=2:
{res}{txt}{it:m}=3:
{res}{txt}{it:m}=4:
{res}{txt}{it:m}=5:
{res}{com}. 
.   mi passive: generate y = .
{res}{txt}{it:m}=0:
(6,367 missing values generated)
{res}{txt}{it:m}=1:
(6,367 missing values generated)
{res}{txt}{it:m}=2:
(6,367 missing values generated)
{res}{txt}{it:m}=3:
(6,367 missing values generated)
{res}{txt}{it:m}=4:
(6,367 missing values generated)
{res}{txt}{it:m}=5:
(6,367 missing values generated)
{res}{com}.   mi passive: replace  y = 0 if `all_false'
{res}{txt}{it:m}=0:
(2,818 real changes made)
{res}{txt}{it:m}=1:
(4,732 real changes made)
{res}{txt}{it:m}=2:
(4,759 real changes made)
{res}{txt}{it:m}=3:
(4,772 real changes made)
{res}{txt}{it:m}=4:
(4,789 real changes made)
{res}{txt}{it:m}=5:
(4,764 real changes made)
{res}{com}.   mi passive: replace  y = 1 if `one_true'
{res}{txt}{it:m}=0:
(1,396 real changes made)
{res}{txt}{it:m}=1:
(1,635 real changes made)
{res}{txt}{it:m}=2:
(1,608 real changes made)
{res}{txt}{it:m}=3:
(1,595 real changes made)
{res}{txt}{it:m}=4:
(1,578 real changes made)
{res}{txt}{it:m}=5:
(1,603 real changes made)
{res}{com}.   label variable y "Adverse pregnancy outcome"
. 
.   // Verify that we can correctly recompute the composite outcome using the
.   // original (non-imputed) data.
.   count if y == TrialOne_adverse_pregoutc & _mi_m == 0
  {res}6,367
{com}.   assert r(N) == `sample_size'
. {c )-}
{txt}
{com}. 
. 
{txt}end of do-file

{com}. do figures/figures
{txt}
{com}. version 16.1
{txt}
{com}. 
. set graphics off
{txt}
{com}. 
. // Define the number of imputations to plot.
. local imputations_to_plot 5
{txt}
{com}. assert `imputations_to_plot' <= $m_imputations
{txt}
{com}. 
. // Make the plots.
. tempname this_frame
{txt}
{com}. frame copy imputed `this_frame'
{txt}
{com}. frame `this_frame' {c -(}
.   mi set M = `imputations_to_plot'
{txt}(number of imputations {it:M} = 5 unchanged)
{com}. 
.   // Generate a variable for each imputed variable that contains the original
.   // values (with the missing data), repeated for each imputed data set.
.   mi convert wide, clear
{txt}{p}
(passive variables
{res}__000000 __000001
{txt}unregistered because not in {it:m}=0)
{p_end}
{res}{com}.   foreach var of varlist $imputeds y1-y5 y {c -(}
{txt}  2{com}.     generate `var'_orig = `var'
{txt}  3{com}.   {c )-}
{txt}(69 missing values generated)
(938 missing values generated)
(203 missing values generated)
(404 missing values generated)
(1,743 missing values generated)
(2,258 missing values generated)
(752 missing values generated)
(875 missing values generated)
(752 missing values generated)
(2,153 missing values generated)
{com}.   mi convert flong, clear
{res}{com}. 
.   // Create readable value labels for the imputations, and order them so that
.   // the original data will appear first in the plots.
.   generate imputation_str = ""
{txt}(38,202 missing values generated)
{com}.   replace imputation_str = "Original" if _mi_m == 0
{txt}variable {bf}imputation_str{sf} was {bf}{res}str1{sf}{txt} now {bf}{res}str8{sf}
{txt}(6,367 real changes made)
{com}.   replace imputation_str = "Imputation " + string(_mi_m) if _mi_m != 0
{txt}variable {bf}imputation_str{sf} was {bf}{res}str8{sf}{txt} now {bf}{res}str12{sf}
{txt}(31,835 real changes made)
{com}.   encode imputation_str, generate(imputation)
.   replace imputation = (`imputations_to_plot' + 1) - imputation
{txt}(31,835 real changes made)
{com}.   local label_var: value label imputation
.   label define `label_var' 0 "Original", modify
. 
.   // Plot the density of each of the continuous imputed variables.
.   foreach var of global imputeds {c -(}
{txt}  2{com}.     quietly misstable patterns `var'_orig if imputation == 0
{txt}  3{com}.     local pc_miss = 100 * (r(N_incomplete) / (r(N_incomplete) + r(N_complete)))
{txt}  4{com}.     local pc_miss = string(`pc_miss', "%8.1f") + "% missing"
{txt}  5{com}. 
.     local var_label : variable label `var'
{txt}  6{com}.     twoway (kdensity `var'_orig)               ///
>            (kdensity `var'),                   ///
>            by(imputation arm, note(""))        ///
>            xtitle("`var_label' (`pc_miss')")   ///
>            ylabel(none)                        ///
>            legend(label(1 "Original") label(2 "Imputed"))
{txt}  7{com}.     graph export "products/Imputations (cont) - `var_label'.pdf", replace
{txt}  8{com}.   {c )-}
{res}{txt}(file products/Imputations (cont) - Age (years).pdf written in PDF format)
{res}{txt}(file products/Imputations (cont) - Body mass index.pdf written in PDF format)
{res}{txt}(file products/Imputations (cont) - Education (years).pdf written in PDF format)
{res}{txt}(file products/Imputations (cont) - Monthly household income (ILS; log scale).pdf written in PDF format)
{com}. 
.   // Plot the distribution of each of the dichotomous imputed variables.
.   label values y* yes_no
.   foreach var of varlist y y1-y5 {c -(}
{txt}  2{com}.     quietly misstable patterns `var'_orig if imputation == 0
{txt}  3{com}.     local pc_miss = 100 * (r(N_incomplete) / (r(N_incomplete) + r(N_complete)))
{txt}  4{com}.     local pc_miss = string(`pc_miss', "%8.1f") + "% missing"
{txt}  5{com}.     local var_label : variable label `var'
{txt}  6{com}. 
.     splitvallabels imputation, recode
{txt}  7{com}.     graph hbar (count),                                             ///
>       over(`var', label(labsize(small)))                            ///
>       over(arm, label(labsize(small)))                              ///
>       over(imputation, label(labsize(small)) relabel(`r(relabel)')) ///
>       blabel(bar) intensity(25)                                     ///
>       ytitle("`var_label' (`pc_miss')") yscale(range(0 3500))
{txt}  8{com}.     graph export "products/Imputations (dich) - `var_label'.pdf", replace
{txt}  9{com}.   {c )-}
{res}{txt}(file products/Imputations (dich) - Adverse pregnancy outcome.pdf written in PDF format)
{res}{txt}(file products/Imputations (dich) - Anemia at birth.pdf written in PDF format)
{res}{txt}(file products/Imputations (dich) - Severe hypertension at birth.pdf written in PDF format)
{res}{txt}(file products/Imputations (dich) - SGA undetected at birth.pdf written in PDF format)
{res}{txt}(file products/Imputations (dich) - Malpresentation undetected at birth.pdf written in PDF format)
{res}{txt}(file products/Imputations (dich) - Large for gestational age.pdf written in PDF format)
{com}. {c )-}
{txt}
{com}. 
. set graphics on
{txt}
{com}. 
. 
{txt}end of do-file

{com}. frame dir
{p2col 3 13 15 2:{txt}default }{res}0 {txt:{it:x}} 0
{p_end}
{p2col 1 13 15 2:{res}* {txt}imputed }{res}23347 {txt:{it:x}} 19{txt:;} 04May2020_eRegQual birth outcomes.dta
{p_end}
{p2col 1 13 15 2:{res}* {txt}original }{res}6367 {txt:{it:x}} 15{txt:;} 04May2020_eRegQual birth outcomes.dta
{p_end}

{txt}Note: frames marked with {res:*} contain unsaved data

{com}. frame change original

. mcartest y1-y5 = i.arm 
{res}{txt}{p 0 6}note: 560 {txt}observations {txt}omitted from EM estimation because of all {txt}imputation variables missing{p_end}
{res}
{txt}Little's CDM test

Number of obs       = {res}5807
{txt}Chi-square distance = {res}74.9234     
{txt}Degrees of freedom  = {res}68
{txt}Prob > chi-square   = {res}0.2639

{com}. mcartest y1-y5 = i.arm i.strat_var 
{res}{txt}{p 0 6}note: 560 {txt}observations {txt}omitted from EM estimation because of all {txt}imputation variables missing{p_end}
{res}
{txt}Little's CDM test

Number of obs       = {res}5807
{txt}Chi-square distance = {res}196.2496    
{txt}Degrees of freedom  = {res}204
{txt}Prob > chi-square   = {res}0.6389

{com}. mcartest i.y1 i.y2 i.y3 i.y4 i.y6 = i.arm i.strat_var 
{res}{err}variable {bf}y6{sf} not found
{txt}{search r(111), local:r(111);}

{com}. mcartest i.y1 i.y2 i.y3 i.y4 i.y5 = i.arm i.strat_var 
{res}{err}depvars may not be factor variables
{txt}{search r(198), local:r(198);}

{com}. mcartest y1-y5 = i.arm i.strat_var 
{res}{txt}{p 0 6}note: 560 {txt}observations {txt}omitted from EM estimation because of all {txt}imputation variables missing{p_end}
{res}
{txt}Little's CDM test

Number of obs       = {res}5807
{txt}Chi-square distance = {res}196.2496    
{txt}Degrees of freedom  = {res}204
{txt}Prob > chi-square   = {res}0.6389

{com}. mcartest y1-y5
{res}{txt}{p 0 6}note: 560 {txt}observations {txt}omitted from EM estimation because of all {txt}imputation variables missing{p_end}
{res}
{txt}Little's MCAR test

Number of obs       = {res}5807
{txt}Chi-square distance = {res}42.4844     
{txt}Degrees of freedom  = {res}34
{txt}Prob > chi-square   = {res}0.1507

{com}. 